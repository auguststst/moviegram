# Generated by Django 3.0.5 on 2020-04-28 07:41

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Имя')),
                ('wikipedia', models.URLField(blank=True, max_length=100, verbose_name='Википедия')),
            ],
            options={
                'verbose_name': 'Актеры',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Категория')),
                ('url', models.SlugField(max_length=160, unique=True)),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Имя')),
                ('wikipedia', models.URLField(blank=True, max_length=100, verbose_name='Википедия')),
            ],
            options={
                'verbose_name': 'Режиссеры',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('url', models.SlugField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Жанр',
                'verbose_name_plural': 'Жанры',
            },
        ),
        migrations.CreateModel(
            name='Administrator',
            fields=[
            ],
            options={
                'ordering': ('username',),
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
                ('poster', models.ImageField(upload_to='movies/', verbose_name='Изображение')),
                ('description', models.TextField(verbose_name='Описание')),
                ('year', models.PositiveSmallIntegerField(default=2020, verbose_name='Год Выпуска')),
                ('country', models.CharField(max_length=30, verbose_name='Страна')),
                ('world_premiere', models.DateField(default=django.utils.timezone.now, verbose_name='Премьера')),
                ('wall', models.BooleanField(default=False, verbose_name='Главная страница')),
                ('telegram', models.URLField(max_length=100, verbose_name='Telegram')),
                ('youtube', models.URLField(max_length=100, verbose_name='Youtube')),
                ('wikipedia', models.URLField(max_length=100, verbose_name='Wikipedia')),
                ('actors', models.ManyToManyField(to='movies.Actor', verbose_name='актеры')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='movies.Category', verbose_name='Категория')),
                ('directors', models.ManyToManyField(to='movies.Director', verbose_name='режиссеры')),
                ('genres', models.ManyToManyField(to='movies.Genre', verbose_name='жанры')),
            ],
            options={
                'verbose_name': 'Фильм',
                'verbose_name_plural': 'Фильмы',
            },
        ),
    ]
